version: "3.8"

services:
  tc-cloudgames-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - DB_HOST=tc-cloudgames-db
      - DB_PORT=5432
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=SecurePassword123!
    ports:
      - "8080"
      - "8081"
    volumes:
      # User Secrets configuration for both Windows and Linux  
      - ${APPDATA:-$HOME/.microsoft}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA:-$HOME/.microsoft}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      
      # Certificate configuration for both Windows and Linux  
      # Maps the certificate path dynamically based on OS  
      - ${USERPROFILE:-$HOME}/.aspnet/https:/https:ro
    entrypoint: >
      sh -c "
      CERT_PATH_LINUX=/home/app/.aspnet/https/aspnetapp.pfx;
      CERT_PATH_WINDOWS=/root/.aspnet/https/aspnetapp.pfx;
      
      echo 'Checking for SSL certificate...';
      if [ ! -f /https/aspnetapp.pfx ]; then
        if [ -f $CERT_PATH_LINUX ]; then
          cp $CERT_PATH_LINUX /https/aspnetapp.pfx;
          echo 'SSL certificate copied from Linux path.';
        elif [ -f $CERT_PATH_WINDOWS ]; then
          cp $CERT_PATH_WINDOWS /https/aspnetapp.pfx;
          echo 'SSL certificate copied from Windows path.';
        else
          echo 'WARNING: No SSL certificate found!';
        fi;
      fi;
      
      dotnet run --project src/TC.CloudGames.Api/TC.CloudGames.Api.csproj"

