name: 🧪 CI | 🚀 CD | Azure Container Apps

on:
  push:
    branches:
      - feature/phase_02
  workflow_dispatch:

env:
  ACR_NAME: tccloudgamesregistry
  CONTAINER_APP_NAME: tc-cloudgames-api-container-app
  RESOURCE_GROUP: tc-cloudgames-rg
  IMAGE_TAG: ${{ github.sha }}
  KEYVAULT_NAME: tc-cloudgames-kv

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: ⏬ Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore TC.CloudGames.sln

      - name: Build
        run: dotnet build TC.CloudGames.sln --configuration Release --no-restore

      - name: Run unit tests
        run: dotnet test test/TC.CloudGames.Unit.Tests/TC.CloudGames.Unit.Tests.csproj --no-build --verbosity normal --configuration Release

  build-and-deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: ${{ needs.build-and-test.result == 'success' }}
    steps:
      - name: ⏬ Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 🔑 Fetch secrets from Azure Key Vault
        id: fetch-secrets
        uses: azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ env.KEYVAULT_NAME }}
          secrets: dbpasswordkv,cachepasswordkv,opentlkv
        env:
          AZURE_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          AZURE_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
          AZURE_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

      - name: 💾 Upload Key Vault secrets to Azure Container App
        env:
          DB_PASSWORD: ${{ steps.fetch-secrets.outputs.dbpasswordkv }}
          CACHE_PASSWORD: ${{ steps.fetch-secrets.outputs.cachepasswordkv }}
          OPENTL_PASSWORD: ${{ steps.fetch-secrets.outputs.opentlkv }}
        run: |
          echo "Secrets fetched:"
          echo "DB_PASSWORD length: ${#DB_PASSWORD}"
          echo "CACHE_PASSWORD length: ${#CACHE_PASSWORD}"
          
          az containerapp secret set \
            --name "$CONTAINER_APP_NAME" \
            --resource-group "$RESOURCE_GROUP" \
            --secrets db-password-secret="$DB_PASSWORD" cache-password-secret="$CACHE_PASSWORD" opentl-password-secret="$OPENTL_PASSWORD"

      - name: 🐳 Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: ⚙️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: ⚙️ Build and push Docker image
        run: |
          docker build -f ./src/TC.CloudGames.Api/Dockerfile -t $ACR_NAME.azurecr.io/$CONTAINER_APP_NAME:$IMAGE_TAG .
          docker push $ACR_NAME.azurecr.io/$CONTAINER_APP_NAME:$IMAGE_TAG

      - name: 🚀 Deploy to Azure Container App
        uses: azure/container-apps-deploy-action@v2
        with:
          acrName: ${{ env.ACR_NAME }}
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          imageToDeploy: ${{ env.ACR_NAME }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ env.IMAGE_TAG }}
          environmentVariables: >
            ASPNETCORE_ENVIRONMENT=Development
            DB_HOST=${{ secrets.AZURE_DB_HOST }}
            DB_PORT=${{ secrets.AZURE_DB_PORT }}
            DB_NAME=${{ secrets.AZURE_DB_NAME }}
            DB_USER=${{ secrets.AZURE_DB_USER }}
            DB_PASSWORD=secretref:db-password-secret
            CACHE_HOST=${{ secrets.AZURE_CACHE_HOST }}
            CACHE_PORT=${{ secrets.AZURE_CACHE_PORT }}
            CACHE_PASSWORD=secretref:cache-password-secret
            OTEL_EXPORTER_OTLP_ENDPOINT=https://otlp-gateway-prod-sa-east-1.grafana.net/otlp
            OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
            OTEL_EXPORTER_OTLP_HEADERS="Authorization=Basic secretref:opentl-password-secret"
            OTEL_RESOURCE_ATTRIBUTES="service.name=tccloudgames-app,service.namespace=tccloudgames-app-group,deployment.environment=development"

      - name: 📦 Output deployed image tag
        run: |
          echo "Deployed image: $ACR_NAME.azurecr.io/$CONTAINER_APP_NAME:$IMAGE_TAG"
