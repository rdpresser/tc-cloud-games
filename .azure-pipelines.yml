trigger:
  branches:
    include:
      - feature/phase_02

variables:
  ACR_NAME: tccloudgamesregistry
  CONTAINER_APP_NAME: tc-cloudgames-api-container-app
  RESOURCE_GROUP: tc-cloudgames-rg
  IMAGE_TAG: $(Build.SourceVersion)
  DOCKERFILE_PATH: src/TC.CloudGames.Api/Dockerfile
  AZURE_SUBSCRIPTION: 'AzureServiceConnection' # nome do service connection no Azure DevOps

stages:

# 🔧 Build and Test
- stage: BuildAndTest
  displayName: 🧪 Build and Test
  jobs:
  - job: BuildTest
    displayName: Build and Run Tests
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self

      - task: UseDotNet@2
        displayName: 'Setup .NET 9 SDK'
        inputs:
          packageType: sdk
          version: '9.0.x'
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - script: dotnet restore TC.CloudGames.sln
        displayName: 🔄 Restore dependencies

      - script: dotnet build TC.CloudGames.sln --configuration Release --no-restore
        displayName: 🏗️ Build

      - script: dotnet test test/TC.CloudGames.Unit.Tests/TC.CloudGames.Unit.Tests.csproj --no-build --configuration Release
        displayName: 🧪 Run Unit Tests

# 🐳 Docker Build, Push and Deploy
- stage: Deploy
  displayName: 🚀 Build Docker, Push to ACR and Deploy to Azure Container Apps
  dependsOn: BuildAndTest
  condition: succeeded()
  jobs:
  - job: DeployJob
    displayName: 🐳 Build & Push Docker + Deploy
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self

      - task: DockerInstaller@0
        displayName: 'Install Docker'

      - task: AzureCLI@2
        displayName: 🔐 Login to Azure & Build/Push Image
        inputs:
          azureSubscription: $(AZURE_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            echo "⚙️ Logging into ACR"
            az acr login --name $ACR_NAME

            echo "🐳 Building Docker image"
            docker build -f $(DOCKERFILE_PATH) -t $ACR_NAME.azurecr.io/$CONTAINER_APP_NAME:$IMAGE_TAG .

            echo "📦 Pushing image to ACR"
            docker push $ACR_NAME.azurecr.io/$CONTAINER_APP_NAME:$IMAGE_TAG

            echo "🚀 Deploying to Azure Container Apps"
            az containerapp update \
              --name $CONTAINER_APP_NAME \
              --resource-group $RESOURCE_GROUP \
              --image $ACR_NAME.azurecr.io/$CONTAINER_APP_NAME:$IMAGE_TAG \
              --set-env-vars ASPNETCORE_ENVIRONMENT=Development

            echo "✅ Deployed image: $ACR_NAME.azurecr.io/$CONTAINER_APP_NAME:$IMAGE_TAG"
